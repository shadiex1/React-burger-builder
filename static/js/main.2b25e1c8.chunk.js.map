{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/Toolbar/NavigationItems/NaviagtionItem/NaviagtionItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/Toolbar/NavigationItems/NavigationItems.module.css","components/Navigation/Toolbar/SideDrawer/DrawerToggle/DrawerToggler.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactDate.module.css","containers/Orders/Order/Order.module.css","containers/Auth/Auth.module.css","components/Logo/Logo.js","components/Navigation/Toolbar/NavigationItems/NaviagtionItem/NaviagtionItem.js","components/Navigation/Toolbar/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Toolbar/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","shared/utlities.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","containers/Orders/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","logo","props","className","classes","Logo","style","height","src","burgerLogo","alt","navigationItem","NavigationItem","activeClassName","active","exact","to","link","children","naviagtionItems","NavigationItems","process","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sidedrawer","attachdClasses","SideDrawer","Close","open","Open","Fragment","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","connect","auth","token","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","BuildControl","Label","label","Less","disabled","removed","More","added","controls","BuildControls","price","toFixed","ctrl","ingredientRemove","ingredientAdded","purchaseable","OrderButton","ordered","Modal","nextProps","nextState","modalClosed","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransfrom","purchaseCanceld","purchaseContinued","spinner","Loader","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","authSuccess","userId","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngredients","sum","orderSummary","disabledInfo","ings","Spinner","onIngredientRemoved","onIngredientAdded","updatePurchaseState","burgerBuilder","totalPrice","ingName","ingredientName","get","then","data","catch","actions","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","elemntConfig","options","option","displayValue","Input","updateObject","oldObject","updatedProperties","checkValidity","rules","isValid","required","trim","minLength","maxLength","isEmail","test","isNumeric","ContactData","orderForm","name","placeholder","validation","valid","street","zipCode","country","email","deliveryMethod","formIsValid","orderHandler","e","preventDefault","formData","formElementIdentifier","order","orderData","onOrderBurger","inputChangedhandler","event","inputIdentifier","updatedFormElement","target","updatedOrderForm","formElementsArray","id","config","form","onSubmit","formElement","loading","post","orderID","orderDate","purchaseBurgerSuccess","purchaseBurgerFail","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","component","amount","ingredientOutput","ig","textTransform","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","fetchedOrders","err","Auth","password","isSignup","switchAuthModeHandler","controlName","updatedControls","submitHandler","onAuth","buildingBurger","authRedirectPath","errorMessage","authRedirect","building","isSignUp","authData","returnSecureToken","url","console","log","expirationDate","Date","getTime","expiresIn","setItem","localId","Logout","onLogout","App","onTryAutoSignup","routes","withRouter","disaptch","getItem","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initState","INGREDINET_PRICES","salad","cheese","meat","bacon","reducer","action","updatedIngredient","updatedIngredients","updatedState","updatedIng","updatedIngs","updatedSt","newOrder","orderId","authStart","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.2b25e1c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2Qn0f\",\"BreadTop\":\"BurgerIngredient_BreadTop__3vzNH\",\"Seeds1\":\"BurgerIngredient_Seeds1__2sk72\",\"Seeds2\":\"BurgerIngredient_Seeds2__gqdxP\",\"Meat\":\"BurgerIngredient_Meat__1TUVv\",\"Cheese\":\"BurgerIngredient_Cheese__jxMob\",\"Salad\":\"BurgerIngredient_Salad__30Bxx\",\"Bacon\":\"BurgerIngredient_Bacon__2U4VH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__HcdhE\",\"Label\":\"Input_Label__36OS9\",\"InputElement\":\"Input_InputElement__kT__U\",\"Invalid\":\"Input_Invalid__3B36n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2ymxz\",\"Open\":\"SideDrawer_Open__1JyTZ\",\"Close\":\"SideDrawer_Close__1M3n1\",\"DesktopOnly\":\"SideDrawer_DesktopOnly__3RuyU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1dzN_\",\"Label\":\"BuildControl_Label__2F4Lb\",\"Less\":\"BuildControl_Less__3gXv1\",\"More\":\"BuildControl_More__33iTx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__lv7xb\",\"DesktopOnly\":\"Toolbar_DesktopOnly__3JmDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NaviagtionItem_NavigationItem__1LCvN\",\"active\":\"NaviagtionItem_active__Rur4T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1ePLu\",\"OrderButton\":\"BuildControls_OrderButton__2Gn8l\",\"enable\":\"BuildControls_enable__1LDpo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1m9oS\",\"Success\":\"Button_Success__3g7za\",\"Danger\":\"Button_Danger__1F5qD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__1hrWa\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__12q0T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3_JuI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggler_DrawerToggle__3YaZx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2Aaw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__-YTxC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__3Pf0F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__3hwSo\",\"load2\":\"Spinner_load2__1zm4e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3fgzh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactDate_ContactData__2bL5e\",\"ConatcData\":\"ContactDate_ConatcData__25Eu8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__9H3X2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2k5KX\",\"ConatcData\":\"Auth_ConatcData__3y1BX\"};","import React from \"react\";\nimport burgerLogo from \"../../assets/images/burger-logo.png\"\nimport classes from \"./Logo.module.css\"\nconst logo =props=>(\n    <div className={classes.Logo} style={{height: props.height}}>\n        <img src={burgerLogo} alt=\"MyBurger\"/>\n    </div>\n)\n\nexport default logo","import React from \"react\";\nimport classes from \"./NaviagtionItem.module.css\";\nimport {NavLink} from \"react-router-dom\"\nconst navigationItem = props =>(\n    <li className={classes.NavigationItem}><NavLink\n    activeClassName={classes.active}\n     exact={props.exact} to={props.link}>\n        {props.children}</NavLink></li>\n\n)\nexport default navigationItem","import React from \"react\";\nimport classes from \"./NavigationItems.module.css\";\nimport NavigationItem from \"./NaviagtionItem/NaviagtionItem\"\n\nconst naviagtionItems = (props)=>(\n    <ul className={classes.NavigationItems}>\n        <NavigationItem exact link={process.env.PUBLIC_URL + '/'} >Burger Builder</NavigationItem>\n        {props.isAuthenticated ? <NavigationItem link={process.env.PUBLIC_URL + '/orders'}>Orders</NavigationItem> : null}\n        {!props.isAuthenticated \n        ? <NavigationItem link={process.env.PUBLIC_URL + '/auth'}>Authenticate</NavigationItem>:<NavigationItem link={process.env.PUBLIC_URL + '/logout'}>Logout</NavigationItem>}\n    </ul>\n)\n\nexport default naviagtionItems","import React from \"react\";\nimport classes from \"./DrawerToggler.module.css\"\nconst drawerToggle=props=>(\n    \n    <div  className ={classes.DrawerToggle}onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n)\n\nexport default drawerToggle;","import React from \"react\";\nimport classes from \"./Toolbar.module.css\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"./NavigationItems/NavigationItems\"\nimport DrawerToggle from \"./SideDrawer/DrawerToggle/DrawerToggle\"\nconst toolbar=props=>(\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked}/>\n        <Logo height=\"80%\"/>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems isAuthenticated={props.isAuth}/>\n        </nav>\n    </header>\n)\n\nexport default toolbar","import React from \"react\";\nimport classes from \"./Backdrop.module.css\"\n\nconst backdrop= props=> (\n    props.show? <div onClick={props.clicked}className={classes.Backdrop}></div> : null\n)\n\nexport default backdrop;","import React from \"react\";\nimport Logo from \"../../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\"\nimport classes from \"./SideDrawer.module.css\";\nimport Backdrop from \"../../../UI/Backdrop/Backdrop\"\nconst sidedrawer= props=> {\n    let attachdClasses=[classes.SideDrawer,classes.Close];\n    if(props.open){\n        attachdClasses=[classes.SideDrawer,classes.Open];\n    }\n    \n    return (\n            <React.Fragment>\n        <Backdrop show={props.open} clicked={props.closed}/>\n<div className={attachdClasses.join(\" \")} onClick={props.closed}>\n     <Logo height=\"11%\"/>\n            <nav>\n                <NavigationItems isAuthenticated={props.isAuth}/>\n            </nav>\n</div>\n</React.Fragment>\n    )\n}\n\nexport default sidedrawer","import React, { Component } from \"react\";\nimport classes from \"./Layout.module.css\";\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\"\nimport SideDrawer from \"../../components/Navigation/Toolbar/SideDrawer/SideDrawer\" ;\nimport {connect} from \"react-redux\";\nclass Layout extends Component { \n\n    state={\n        showSideDrawer:false\n    }\n\n    sideDrawerClosedHandler=()=>{\n        this.setState({showSideDrawer:false})\n    }\n\n    sideDrawerToggleHandler =()=>{\n        this.setState((prevState) => {return {showSideDrawer: !prevState.showSideDrawer}})\n    }\n    render(){\n    return (\n    <React.Fragment>\n    <div>\n       <Toolbar \n       isAuth={this.props.isAuthenticated}\n       drawerToggleClicked={this.sideDrawerToggleHandler}/>\n       <SideDrawer\n       isAuth={this.props.isAuthenticated}\n        open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler}/>\n    </div>\n    <main className={classes.Content}>\n        {this.props.children}\n    </main>\n    </React.Fragment>\n)}\n}\n\nconst mapStateToProps = state=>{\n    return {\n        isAuthenticated: state.auth.token !== null \n    }\n}\nexport default connect(mapStateToProps)(Layout)","import React from \"react\";\nimport classes from \"./BurgerIngredient.module.css\";\nimport propTypes from \"prop-types\";\n\nconst BurgerIngredient = (props)=> {\n    let ingredient=null;\n    switch(props.type){\n        case (\"bread-bottom\"): \n        ingredient = <div className={classes.BreadBottom}></div>;\n        break;\n        case(\"bread-top\"):\n        ingredient = (\n            <div className={classes.BreadTop}>\n                <div className={classes.Seeds1}></div>\n                <div className={classes.Seeds2}></div>\n            </div>\n        )\n        break;\n        case(\"meat\"):\n        ingredient =<div className={classes.Meat}></div>\n        break;\n\n        case (\"cheese\"):\n            ingredient = <div className={classes.Cheese}></div>\n            break;\n\n        case (\"salad\"):\n            ingredient = <div className={classes.Salad}></div>\n            break;\n        case (\"bacon\"):\n            ingredient=<div className={classes.Bacon}></div>\n            break;\n            default: \n            ingredient=null;\n\n    }\n    return ingredient;\n};\nBurgerIngredient.propTypes={\n    type:propTypes.string.isRequired\n}\nexport default BurgerIngredient;","import React from \"react\";\nimport classes from \"./Burger.module.css\"\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\"\n\nconst burger=(props)=> {\n    let transformedIngredients =Object.keys(props.ingredients)\n    .map(igKey => {\n        return [...Array(props.ingredients[igKey])].map((_,i)=>{\n           return <BurgerIngredient key={igKey + i} type={igKey}/>\n        }) \n    }).reduce((arr,el)=>{\n        return arr.concat(el)\n    },[]);\n\n    if(transformedIngredients.length ===0){\n        transformedIngredients = <p>Please start adding ingredients</p>\n    }\n\n   \n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\"/>\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\"/>\n        </div>\n    );\n}\n\nexport default burger","import React from \"react\";\nimport classes from \"./BuildControl.module.css\"\n\nconst BuildControl = props => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>\n            {props.label}\n        </div>\n        <button className={classes.Less} disabled={props.disabled} onClick={props.removed}>less</button>\n        <button className={classes.More} onClick={props.added}>more</button>\n    </div>\n)\n\nexport default BuildControl;","import React from \"react\";\nimport classes from \"./BuildControls.module.css\";\nimport BuildControl from \"./BuildControl/BuildControl\"\n\nconst controls = [\n    {label:\"Salad\",type:\"salad\"},\n    {label:\"Bacon\",type:\"bacon\"},\n    {label:\"Cheese\",type:\"cheese\"},\n    {label:\"Meat\",type:\"meat\"},\n]\nconst BuildControls = props => (\n    <div className={classes.BuildControls}>\n        <p>current Price:<strong>{props.price.toFixed(2)}</strong></p>\n         {controls.map(ctrl=>(\n             <BuildControl removed={()=> props.ingredientRemove(ctrl.type)} added = {()=> props.ingredientAdded(ctrl.type)}\n                key={ctrl.label} label={ctrl.label}\n                disabled={props.disabled[ctrl.type]}/>\n         ))}\n         <button \n         disabled={!props.purchaseable} className={classes.OrderButton}\n         onClick={props.ordered}>{props.isAuth ? \"ORDER NOW\" : \"SIGN UP TO ORDER\"}</button>\n    </div>\n);\n\n\nexport default BuildControls","import React, { Component } from \"react\"\nimport classes from \"./Modal.module.css\";\nimport Backdrop from \"../Backdrop/Backdrop\"\n\nclass Modal extends Component {\n   \n   componentDidUpdate(nextProps,nextState){\n       return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n   }\n\n  \n    render(){\n\n        return (\n            <React.Fragment>\n        <Backdrop clicked={this.props.modalClosed}show={this.props.show}/>\n<div style={{transform: this.props.show? \"translateY(0)\" : \"translateY(-100vh)\", \n                opacity:this.props.show? \"1\" : \"0\" }}className={classes.Modal}>\n    {this.props.children}\n</div>\n</React.Fragment>\n        )\n    }\n}\n\n\nexport default Modal","import React from \"react\";\nimport classes from \"./Button.module.css\"\n\nconst button = props => (\n<button disabled={props.disabled} className={[classes.Button,classes[props.btnType]].join(\" \")} onClick ={props.clicked}>\n    {props.children}\n</button>\n)\n\nexport default button","import React, { Component } from \"react\";\nimport Button from \"../../UI/Button/Button\"\nclass OrderSummary extends Component {\n    componentDidUpdate(){\n    }\n    render(){\n        const ingredientSummary = Object.keys(this.props.ingredients).map(igKey=>{\n    return <li key={igKey}><span style={{textTransfrom:\"capitalize\"}}>{igKey}</span>: {this.props.ingredients[igKey]}</li>\n})\n       return(\n    <React.Fragment>\n            <h3>Your Order</h3>\n            <p>A delicious burger with the following ingredients: </p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><strong>Total Price:{this.props.price.toFixed(2)}</strong></p>\n            <p>Continue to checkout</p>\n            <Button btnType=\"Danger\" clicked={this.props.purchaseCanceld}>CANCEL</Button>\n            <Button btnType=\"Success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n</React.Fragment>\n)\n    }\n\n\n\n\n};\n\nexport default OrderSummary;","import React from \"react\";\nimport classes from \"./Spinner.module.css\"\nconst spinner=()=>\n<div className={classes.Loader}>Loading...</div>\n\n\nexport default spinner","import React, { Component } from \"react\";\nimport Modal from \"../../components/UI/Modal/Modal\";\n\n\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use( req => {\n                this.setState( { error: null } );\n                return req;\n            } );\n            this.resInterceptor = axios.interceptors.response.use( res => res, error => {\n                this.setState( { error: error } );\n            } );\n        }\n\n        componentWillUnmount () {\n            axios.interceptors.request.eject( this.reqInterceptor );\n            axios.interceptors.response.eject( this.resInterceptor );\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState( { error: null } );\n        }\n\n        render () {\n            return (\n                <React.Fragment>\n                    <Modal\n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import axios from \"axios\"\nconst instance = axios.create(\n    {\n        baseURL:\"https://react-burger-builder-a235e.firebaseio.com/\"\n    }\n)\n\nexport default instance;","import * as actionTypes from \"./actionTypes\";\nimport axios from \"axios\"\n\nexport const authStart= ()=>{\n    return {\n        type:actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token,userId)=>{\nreturn {\n    type:actionTypes.AUTH_SUCCESS,\n    idToken:token,\n    userId:userId\n    \n}\n}\n\n\nexport const authFail = (error) =>{\n    return {\n        type:actionTypes.AUTH_FAIL,\n        error:error\n    }\n}\n\n\nexport const logout =()=>{\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"expirationDate\")\n    localStorage.removeItem(\"userId\")\n    return {\n        type:actionTypes.AUTH_LOGOUT\n    }\n}\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch =>{\n        setTimeout(()=>{\n            dispatch(logout())\n        },expirationTime*1000)\n    }\n}\nexport const auth = (email,password,isSignUp) =>{\n    return dispatch =>{\n        dispatch(authStart());\n        const authData={\n            email:email,\n            password:password,\n            returnSecureToken:true\n        };\n        let url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDUtpWve5bZmmMPwK91nzSgwFPrNnx9pnU\"\n        if (!isSignUp){\n            url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDUtpWve5bZmmMPwK91nzSgwFPrNnx9pnU\"\n        }\n        axios.post(url,authData\n        ).then(\n            res=>{\n                console.log(res);\n                const expirationDate=new Date(new Date().getTime() + res.data.expiresIn *1000)\n                localStorage.setItem(\"token\",res.data.idToken);\n                localStorage.setItem(\"expirationDate\",expirationDate);\n                localStorage.setItem(\"userId\",res.data.localId)\n                dispatch(authSuccess(res.data.idToken,res.data.localId))\n                dispatch(checkAuthTimeout(res.data.expiresIn))\n            }\n        ).catch(\n            err=> {\n                console.log(err.response)\n                dispatch(authFail(err.response.data.error))\n            }\n            \n        )\n    }\n};\n\nexport const setAuthRedirectPath = path =>{\n    return {\n        type:actionTypes.SET_AUTH_REDIRECT_PATH,\n        path:path\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                const userId = localStorage.getItem('userId');\n                dispatch(authSuccess(token, userId));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\n            }   \n        }\n    };\n};","export const ADD_INGREDIENT=\"ADD_INGREDIENT\";\nexport const REMOVE_INGREDIENT=\"REMOVE_INGREDIENT\";\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\nexport const FETCH_INGREDIENTS_FAILD = \"FETCH_INGREDIENTS_FAILD\";\n\n\nexport const PURCHASE_BURGER_SUCCES =\"PURCHASE_BURGER_SUCCES\"\nexport const PURCHASE_BURGER_FAIL =\"PURCHASE_BURGER_FAIL\"\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\"\nexport const PURCHASE_INIT= \"PURCHASE_INI\"\n\n\nexport const FETCH_ORDERS_START =   \"FETCH_ORDERS_START\"\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDER_SUCCESS\"\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_SUCCESS\"\n\nexport const AUTH_START = \"AUTH_START\"\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\"\nexport const AUTH_FAIL = \"AUTH_FAIL\"\nexport const AUTH_LOGOUT= \"AUTH_LOGOUT\"\n\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\"","import React , {Component} from \"react\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\"\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\"\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport {connect} from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\nimport axios from \"../../axios-orders\";\n\n\nclass BurgerBuilder extends Component {\n\n    state={\n        purchasing:false,\n        \n    }\n    componentDidMount (){\n       this.props.onInitIngredients()\n    }\n\n    updatePurchaseState (ingredients) {\n        \n        const sum=Object.keys(ingredients).map(igKey=>{\n            return ingredients[igKey];\n        }).reduce((sum,el)=>{\n            return sum+el;\n        },0);\n        return sum > 0;\n    }\n\n   \n  \n\n    purchaseHandler= () =>{\n        if (this.props.isAuthenticated){\n            this.setState({\n            purchasing:true\n        })\n        }else {\n            this.props.onSetAuthRedirectPath(`${process.env.PUBLIC_URL + '/checkout'}`);\n            this.props.history.push(`${process.env.PUBLIC_URL + '/auth'}`)\n        }\n        \n    }\n\n    purchaseCancelHandler=()=>{\n        this.setState({purchasing:false})\n    };\n\n    purchaseContinueHandler=()=>{\n   \n        this.props.onInitPurchase()\n    this.props.history.push(`${process.env.PUBLIC_URL + '/checkout'}`)\n    }\n    render(){\n        let orderSummary=null\n         \n        \n        \n        const disabledInfo = {\n            ...this.props.ings\n        };\n        for(let key in disabledInfo){\n            disabledInfo[key]=disabledInfo[key] <=0 \n        } \n\n\n        let burger = this.props.error ? <p><stron>ingredients cant be loaded..</stron><br/>fix you error then comebck asshole</p>:<Spinner/>\n        if (this.props.ings){\n             burger = <React.Fragment>\n            <Burger ingredients={this.props.ings}/>\n                <BuildControls \n                isAuth={this.props.isAuthenticated}\n                ingredientRemove={this.props.onIngredientRemoved}\n                 ingredientAdded={this.props.onIngredientAdded}\n                 disabled={disabledInfo}\n                 price={this.props.price}\n                 purchaseable={this.updatePurchaseState(this.props.ings)}\n                 ordered={this.purchaseHandler}/></React.Fragment>\n            orderSummary  =  <OrderSummary price={this.props.price}purchaseContinued={this.purchaseContinueHandler}\n        purchaseCanceld={this.purchaseCancelHandler} ingredients={this.props.ings}/>\n        }\n       \n        return (\n            <React.Fragment>\n                <Modal modalClosed={this.purchaseCancelHandler} show={this.state.purchasing}>\n                   {orderSummary}\n                </Modal>\n\n                {burger}\n            </React.Fragment>\n        )\n    }\n}\nconst mapStateToProps =state=>{\n    return {\n        ings:state.burgerBuilder.ingredients,\n        price:state.burgerBuilder.totalPrice,\n        error:state.burgerBuilder.error,\n        isAuthenticated:state.auth.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch =>{\n    return {\n        onIngredientAdded: (ingName)=> dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName)=> dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: ()=> dispatch(actions.initIngredients()),\n        onInitPurchase:()=>dispatch(actions.purchaseInit() ),\n        onSetAuthRedirectPath:(path)=> dispatch(actions.setAuthRedirectPath(path))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));","import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\n\n\nexport const addIngredient = name=>{\n    return {\n        ingredientName:name,\n        type:actionTypes.ADD_INGREDIENT\n    }\n}\nexport const removeIngredient = name=>{\n    return {\n        ingredientName:name,\n        type:actionTypes.REMOVE_INGREDIENT\n    }\n}\n\nexport const setIngredients = ingredients =>{\n    return {\n        type:actionTypes.SET_INGREDIENTS,\n        ingredients:ingredients\n    }\n};\nexport const fetchIngredientsFaild=()=>{\n    return {\n        type:actionTypes.FETCH_INGREDIENTS_FAILD\n    }\n}\nexport const initIngredients = ()=> {\n    return dispatch => {\n         axios.get(\"https://react-burger-builder-a235e.firebaseio.com/ingredients.json\")\n        .then(res=>{\n            dispatch(setIngredients(res.data))\n        }).catch(error=>{\n            dispatch(fetchIngredientsFaild())\n        })\n    }\n}\n","import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\n\n\nexport const purchaseBurgerSuccess = (id,orderData) =>{\n    return {\n        type:actionTypes.PURCHASE_BURGER_SUCCES,\n        orderID :id,\n        orderDate:orderData\n    }\n}\n\nexport const purchaseBurgerFail = error =>{\n    return {\n        type:actionTypes.PURCHASE_BURGER_FAIL,\n        error:error\n    }\n}\nexport const purchaseBurgerStart= ()=> {\n    return {\n        type:actionTypes.PURCHASE_BURGER_START \n    }\n}\nexport const purchaseBurger = (orderData,token) =>{\n   \n    return dispatch => {\n        dispatch(purchaseBurgerStart()) \n        axios.post(\"/orders.json?auth=\" + token, orderData).then(res => {\n            dispatch(purchaseBurgerSuccess(res.data.name,orderData))\n    }).catch(\n        error => {\n            dispatch(purchaseBurgerFail(error))\n        }\n    )\n    }\n}\n\nexport const purchaseInit= ()=>{\n    return {\n        type:actionTypes.PURCHASE_INIT\n    }\n}\n\nexport const fetchOrdersSuccess = orders =>{\n    return {\n        type:actionTypes.FETCH_ORDERS_SUCCESS,\n        orders:orders\n    }\n}\n\nexport const fetchOrderFail = error => {\n    return {\n        type:actionTypes.FETCH_ORDERS_FAIL,\n        error :error\n    }\n}\n\nexport const fetchOrderStart= ()=>{\n    return {\n        type:actionTypes.FETCH_ORDERS_START,\n\n    }\n}\n\nexport const fetchOrders = (token)=>{\n    return dispatch =>{\n        dispatch(fetchOrderStart());\n     axios.get('/orders.json?auth=' + token)\n    .then(res => {\n        const fetchedOrders = [];\n        for (let key in res.data) {\n            fetchedOrders.push({\n                ...res.data[key],\n                id: key\n            });\n        }\n        dispatch(fetchOrdersSuccess(fetchedOrders))\n    })\n    .catch(err => {\n       dispatch(fetchOrderFail(err))\n    });\n    }\n   \n}","import React from \"react\";\nimport Burger from \"../../Burger/Burger\";\n\nimport Button from \"../../UI/Button/Button\";\nimport classes from \"./CheckoutSummary.module.css\"\n\nconst checkoutSummary = props =>{\nreturn (\n    <div className={classes.CheckoutSummary}>\n        <h1>We hope it tastes well</h1>\n        <div style={{width:\"100%\",margin:\"auto\"}}>\n        <Burger ingredients={props.ingredients}/>\n        </div>\n        <Button clicked={props.checkoutCancelled} btnType=\"Danger\">CANCEL</Button>\n        <Button  clicked={props.checkoutContinued} btnType=\"Success\">CONTINUE</Button>\n    </div>\n)\n}\n\nexport default checkoutSummary","import React from \"react\";\nimport classes from \"./Input.module.css\";\n\nconst input= props =>{\n    let inputElement=null;\n    const inputClasses = [classes.InputElement]\n    if (props.invalid && props.shouldValidate && props.touched){\n        inputClasses.push(classes.Invalid)\n    }\n\n    switch (props.elementType){\ncase (\"input\"):\n    inputElement=<input \n    className={inputClasses.join(\" \")}\n    {...props.elementConfig} \n    value={props.value} onChange={props.changed}/>;\n    break;\ncase(\"textArea\"):\ninputElement=<textarea className=\n{inputClasses.join(\" \")}\n{...props.elemntConfig} \nvalue={props.value} onChange={props.changed}/>;\n    break;\n    case(\"select\"):\n    inputElement=(\n        <select className={inputClasses.join(\" \")}\n        value={props.value} onChange={props.changed}>\n            {props.elementConfig.options.map(option=>(\n                <option key={option.value}value={option.value}>\n                    {option.displayValue}\n                </option>\n            ))}\n\n        </select>\n    );\n    break;\ndefault:\n    inputElement=<input \nclassName={classes.InputElement}\n {...props.elementConfig} \n value={props.value}/>\n\n    }\n    return ( \n        <div className={classes.Input}>\n        <label className={classes.Label}>{props.label}</label>\n        {inputElement}\n       </div>\n    )\n}\n   \n\n\nexport default input","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}\n\nexport const checkValidity=(value, rules)=> {\n    let isValid = true;\n    if (!rules) {\n        return true;\n    }\n    \n    if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid\n    }\n\n    if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid\n    }\n\n    if (rules.isEmail) {\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    if (rules.isNumeric) {\n        const pattern = /^\\d+$/;\n        isValid = pattern.test(value) && isValid\n    }\n\n    return isValid;\n}\n","import React, { Component } from \"react\";\nimport Button from \"../../../components/UI/Button/Button\";\nimport classes from \"./ContactDate.module.css\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport * as actions from \"../../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport { updateObject, checkValidity } from \"../../../shared/utlities\";\n\nclass ContactData extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"your Name\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      street: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Street\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      zipCode: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Zip Code\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 5,\n          maxLength: 5,\n          isNumeric: true\n        },\n        valid: false,\n        touched: false\n      },\n      country: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Country\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"your E-mail\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          isEmail: true\n        },\n        valid: false,\n        touched: false\n      },\n      deliveryMethod: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            { value: \"fastest\", displayValue: \"fastest\" },\n            { value: \"cheapest\", displayValue: \"Chepeast\" }\n          ]\n        },\n        value: \"fastest\",\n        valid: true,\n        validation: {}\n      }\n    },\n    formIsValid: false\n  };\n  orderHandler = e => {\n    e.preventDefault();\n\n    const formData = {};\n    for (let formElementIdentifier in this.state.orderForm) {\n      formData[formElementIdentifier] = this.state.orderForm[\n        formElementIdentifier\n      ].value;\n    }\n    const order = {\n      ingredients: this.props.ings,\n      price: this.props.price,\n      orderData: formData\n    };\n    this.props.onOrderBurger(order, this.props.token);\n  };\n\n  inputChangedhandler = (event, inputIdentifier) => {\n    const updatedFormElement = updateObject(\n      this.state.orderForm[inputIdentifier],\n      {\n        value: event.target.value,\n        valid: checkValidity(\n          event.target.value,\n          this.state.orderForm[inputIdentifier].validation\n        ),\n        touched: true\n      }\n    );\n    const updatedOrderForm = updateObject(this.state.orderForm, {\n      [inputIdentifier]: updatedFormElement\n    });\n\n    let formIsValid = true;\n    for (let inputIdentifier in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n    }\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.orderForm[key]\n      });\n    }\n    let form = (\n      <form onSubmit={this.orderHandler}>\n        {formElementsArray.map(formElement => (\n          <Input\n            key={formElement.id}\n            elementType={formElement.config.elementType}\n            elementConfig={formElement.config.elementConfig}\n            value={formElement.config.value}\n            invalid={!formElement.config.valid}\n            shouldValidate={formElement.config.validation}\n            touched={formElement.config.touched}\n            changed={e => this.inputChangedhandler(e, formElement.id)}\n          />\n        ))}\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\n          ORDER\n        </Button>\n      </form>\n    );\n    if (this.props.loading) {\n      form = <Spinner />;\n    }\n    return (\n      <div className={classes.ContactData}>\n        <h4>Enter Your Contact Data</h4>\n        {form}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    ings: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    loading: state.order.loading,\n    token: state.auth.token\n  };\n};\n\nconst mapDisaptchToProps = dispatch => {\n  return {\n    onOrderBurger: (orderData, token) =>\n      dispatch(actions.purchaseBurger(orderData, token))\n  };\n};\nexport default connect(mapStateToProps, mapDisaptchToProps)(ContactData);\n","import React, { Component } from \"react\";\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\"\nimport {Route,Redirect} from \"react-router-dom\";\nimport ContactData from \"./ContactData/ContactData\";\nimport {connect} from \"react-redux\";\nclass Checkout extends Component{\n   \n\n    \n     checkoutCancelledHandler=()=>{\n        this.props.history.goBack();\n    }\n    checkoutContinuedHandler=()=>{\n        this.props.history.replace(`${process.env.PUBLIC_URL + '/checkout/contact-data'}`);\n    }\n    render(){\n        let summary = <Redirect to={process.env.PUBLIC_URL + '/'}/>\n        \n        if(this.props.ings){\n            const purchasedRedirect= this.props.purchased ?<Redirect to= {process.env.PUBLIC_URL + '/'}/> : null\n            summary = (<div>\n                {purchasedRedirect}\n                <CheckoutSummary\n                    checkoutCancelled={this.checkoutCancelledHandler}\n                    checkoutContinued={this.checkoutContinuedHandler}\n                 ingredients={this.props.ings}/>\n                 <Route path={process.env.PUBLIC_URL + '/checkout/contact-data'} \n                 component={ContactData}/> </div>)\n             \n        }\n        return summary\n     \n    }\n}\n\nconst mapStateToProps= state => {\n    return {\n        ings:state.burgerBuilder.ingredients,\n        purchased:state.order.purchased\n    }\n}\n\nexport default connect(mapStateToProps)(Checkout)","import React from \"react\";\nimport classes from \"./Order.module.css\"\n\nconst order = ( props ) => {\n    const ingredients = [];\n\n    for ( let ingredientName in props.ingredients ) {\n        ingredients.push( \n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName]\n            }\n        );\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n                }}\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\n    });\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\n        </div>\n    );\n};\n\nexport default order;","\nimport React, { Component } from \"react\";\nimport Order from \"./Order/Order\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport * as actions from \"../../store/actions/index\";\nimport {connect} from \"react-redux\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\nclass Orders extends Component {\n   \n\n    componentDidMount() {\n    this.props.onFetchOrders(this.props.token,this.props.userId)\n    }\n\n    render () {\n        let orders= <Spinner/>\n        if (!this.props.loading){\n            orders=\n                this.props.order.map(order => (\n                    <Order \n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price} />\n                ))\n        }\n        return orders\n}\n}\n\nconst mapStateToProps = state =>{\n    return {\n        order:state.order.orders,\n        loading:state.order.loading,\n        token:state.auth.token,\n    }\n}\nconst mapDispatchToProps = dispatch =>{\n    return {\n        onFetchOrders:(token)=> dispatch(actions.fetchOrders(token))\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, { Component} from \"react\";\n import Input from \"../../components/UI/Input/Input\";\n import Button from \"../../components/UI/Button/Button\";\n import classes from \"./Auth.module.css\";\n import * as actions from \"../../store/actions/index\";\n import Spinner from \"../../components/UI/Spinner/Spinner\"\n import {connect} from \"react-redux\";\n import {Redirect} from \"react-router-dom\";\n import {updateObject,checkValidity } from \"../../shared/utlities\"\n\nclass Auth extends Component {\n    state={\n        controls:{\n            email:{\n                elementType:\"input\",\n                elementConfig:{\n                    type:\"email\",\n                    placeholder:\"Mail Address\"\n                },value:\"\",\n                validation:{\n                    required:true,\n                    isEmail:true\n                },valid:false,\n                touched:false\n    \n            },\n            password:{\n                elementType:\"input\",\n                elementConfig:{\n                    type:\"password\",\n                    placeholder:\"Password\"\n                },value:\"\",\n                validation:{\n                    required:true,\n                    minLength:6\n                },valid:false,\n                touched:false\n    \n            }\n        },\n        isSignup:true\n    }\n\n    componentDidMount(){\n        if(!this.props.buildingBurger && this.props.authRedirectPath !== `${process.env.PUBLIC_URL + '/'}` ){\n            this.props.onSetAuthRedirectPath();\n        }\n    }\n\n    switchAuthModeHandler=()=>{\n        this.setState(prevState => {\n            return {isSignup:!prevState.isSignup}\n        });\n    }\n    \n\n    inputChangedhandler=(e,controlName)=>{\n        const updatedControls=updateObject(this.state.controls,{\n            [controlName]:updateObject(this.state.controls[controlName],{\n                value:e.target.value,\n                valid:checkValidity(e.target.value,this.state.controls[controlName].validation),\n                touched:true\n            })\n               \n        });\n        this.setState({controls:updatedControls})\n    }\n\n    \n    submitHandler = e =>{\n        e.preventDefault();\n        this.props.onAuth(this.state.controls.email.value ,  \n             this.state.controls.password.value,this.state.isSignup) \n        \n    }\n    render (){\n        const formElementsArray=[];\n    for (let key in this.state.controls){\n        formElementsArray.push({\n            id:key,\n            config:this.state.controls[key]\n        })\n    } \n    let form =formElementsArray.map(formElement => (\n        <Input key={formElement.id} \n        elementType={formElement.config.elementType}\n        elementConfig={formElement.config.elementConfig}\n        value={formElement.config.value}\n        invalid={!formElement.config.valid}\n        shouldValidate={formElement.config.validation}\n        touched={formElement.config.touched}\n         changed={(e)=>this.inputChangedhandler(e,formElement.id)}/>\n    ))\n        if (this.props.loading){  \n            form=<Spinner/>\n        }\n\n        let errorMessage=null\n    \n\n        if (this.props.error){\n            errorMessage=(<p>{this.props.error.message}</p>)\n        }\n        let authRedirect=null\n        if(this.props.isAuthenticated){   \n            authRedirect = <Redirect to={this.props.authRedirectPath}/>\n        }\n        return (     \n            <div className={classes.Auth}>\n                {authRedirect}\n                {errorMessage}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\"> SUBMIT</Button>\n                </form>\n                <Button \n                clicked={this.switchAuthModeHandler}\n                btnType=\"Danger\"> {this.state.isSignup ? \"SIGNIN\" : \"SIGNUP\"} </Button>\n            </div>\n        )\n    }\n}\nconst mapStatetoProps =state=>{\n    return {\n        loading:state.auth.loading,\n        error:state.auth.error,\n        isAuthenticated:state.auth.token !== null,\n        buildingBurger:state.burgerBuilder.building,\n        authRedirectPath:state.auth.authRedirectPath\n    }\n}\nconst mapDispatchToProps =dispatch =>{\n    return {\n        onAuth:(email,password,isSignup)=>dispatch(actions.auth(email,password,isSignup)),\n        onSetAuthRedirectPath:()=>dispatch(actions.setAuthRedirectPath(`${process.env.PUBLIC_URL + '/'}`))\n    }\n}\nexport default connect(mapStatetoProps,mapDispatchToProps)(Auth)\n\n\n\n","import React, { Component } from \"react\";\nimport {Redirect} from \"react-router-dom\"\nimport * as actions from \"../../../store/actions/index\";\nimport {connect} from \"react-redux\"\nclass Logout extends Component {\n    componentDidMount (){\n        this.props.onLogout()\n    }\n    render(){\n        return <Redirect to={process.env.PUBLIC_URL + '/'}/>\n        \n    }\n}\nconst mapDispatchToProps =dispatch =>{\n    return {\n        onLogout:() =>dispatch(actions.logout())\n    }\n}\nexport default connect(null,mapDispatchToProps)(Logout)","import React, {Component} from 'react';\nimport Layout from \"./hoc/Layout/Layout\"\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./containers/Checkout/Checkout\"\nimport {Route , Switch,withRouter,Redirect} from \"react-router-dom\";\nimport Orders from \"./containers/Orders/Orders\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport {connect} from \"react-redux\";\nimport * as actions from \"./store/actions/index\"\n\n\nclass App extends Component {\n  \n  componentDidMount(){\n    this.props.onTryAutoSignup()\n  }\n  render(){\n    let routes = (\n      <Switch>\n      <Route path={process.env.PUBLIC_URL + '/auth'} exact component={BurgerBuilder}/>\n     <Route path = {process.env.PUBLIC_URL + '/auth'}  component={Auth}/>\n     <Redirect to = {process.env.PUBLIC_URL + '/'}/>\n     </Switch>\n     )\n    if (this.props.isAuthenticated){\n      routes = (\n        <Switch>\n         <Route path={process.env.PUBLIC_URL + '/checkout'} component={Checkout}/>\n         <Route path={process.env.PUBLIC_URL + '/orders'}  component={Orders}/> \n         <Route path={process.env.PUBLIC_URL + '/'} exact component={BurgerBuilder}/>\n         <Route path = {process.env.PUBLIC_URL + '/logout'}  component={Logout}/>\n         <Route path = {process.env.PUBLIC_URL + '/auth'}  component={Auth}/>\n         <Redirect to = {process.env.PUBLIC_URL + '/'}/>\n\n         </Switch>\n         )\n    }\n    return ( \n      <div>\n        <Layout>\n         \n         {routes}\n         \n        </Layout>\n      </div>\n    )\n\n\n  }\n}\nconst mapStatetoProps = state => {\n  return {\n    isAuthenticated :state.auth.token !== null\n  }\n}\nconst mapDispachToProps=disaptch =>{\n  return {\n    onTryAutoSignup:()=>disaptch(actions.authCheckState())\n  }\n  \n}\n\nexport default withRouter(connect(mapStatetoProps,mapDispachToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\nimport {updateObject} from \"../../shared/utlities\"\nconst initState={\n    ingredients:null,\n    totalPrice:4,\n    error:false,\n    building:false\n};\n\nconst INGREDINET_PRICES = {\n    salad:3,\n    cheese:2,\n    meat:25,\n    bacon:5\n}\n\nconst reducer=(state=initState,action)=>{\nswitch (action.type){\n    case actionTypes.ADD_INGREDIENT :\n        const updatedIngredient= { [action.ingredientName]:state.ingredients[action.ingredientName] + 1}\n        const updatedIngredients=updateObject(state.ingredients,updatedIngredient)\n        const updatedState={\n            ingredients:updatedIngredients,\n            totalPrice:state.totalPrice + INGREDINET_PRICES[action.ingredientName],\n            building:true\n        }\n        return updateObject(state,updatedState)\n            \n     case actionTypes.REMOVE_INGREDIENT:\n        const updatedIng= { [action.ingredientName]:state.ingredients[action.ingredientName] - 1}\n        const updatedIngs=updateObject(state.ingredients,updatedIng)\n        const updatedSt={\n            ingredients:updatedIngs,\n            totalPrice:state.totalPrice + INGREDINET_PRICES[action.ingredientName],\n            building:true\n        }\n        return updateObject(state,updatedSt)\n         case actionTypes.SET_INGREDIENTS :\n             return updateObject(state,{\n                 ingredients:{\n                     salad:action.ingredients.salad,\n                     bacon:action.ingredients.bacon,\n                     cheese:action.ingredients.cheese,\n                     meat:action.ingredients.meat\n                 },\n                 totalPrice:4,\n                 error:false\n                 ,building:true\n             });\n             \n                 \n        case actionTypes.FETCH_INGREDIENTS_FAILD : \n        return updateObject(state,{\n            error:true\n        })\n        \n         default : return state\n}\n}\n\nexport default reducer","import * as actionTypes from \"../actions/actionTypes\";\nimport {updateObject}  from \"../../shared/utlities\"\n\n\nconst initState = {\n    orders:[],\n    loading:false,\n    purchased:false\n}\nconst reducer = (state=initState,action)=>{\n    switch (action.type){\n         case actionTypes.PURCHASE_INIT : \n          return updateObject(state,{purchased:false})\n        case actionTypes.PURCHASE_BURGER_SUCCES : \n        const newOrder = updateObject(action.orderDate,{id:action.orderId})\n             return updateObject(state,{\n                 loading:false,\n                 purchased:true,\n                 orders:state.orders.concat(newOrder)\n             })\n        case actionTypes.PURCHASE_BURGER_FAIL :\n            return updateObject(state,{loading:false})\n        case actionTypes.PURCHASE_BURGER_START :\n           return updateObject(state,{loading:true})\n        case actionTypes.FETCH_ORDERS_START:\n             return updateObject(state,{loading:true})\n\n        case actionTypes.FETCH_ORDERS_SUCCESS:\n            return updateObject(state,{\n                orders:action.orders,\n                loading:false\n            })\n        case actionTypes.FETCH_ORDERS_FAIL:\n            return updateObject(state,{\n                loading:false\n            })\n        default: \n            return state;\n    }\n\n};\n\nexport default reducer","import * as actionTypes from \"../actions/actionTypes\"\nimport {updateObject} from \"../../shared/utlities\"\n\nconst initState={\n    token:null,\n    userId:null,\n    error:null,\n    loading:false,\n    authRedirectPath: '/'\n}\n\nconst authStart = (state,action) => {\n            return updateObject(state,{error:null,loading:true})\n\n}\n\n\nconst authSuccess = (state,action)=>{\n        return updateObject(state,{\n            token:action.idToken,\n            userId:action.userId,\n            error:null,\n            loading:false,\n            authRedirectPath:\"/\"\n        })\n}\n\n\nconst authFail =(state,action)=>{\n    return updateObject(state,{\n        error:action.error,loading:false\n    })\n}\nconst authLogout = (state,action)=>{\n    return updateObject(state,{token:null,userId:null})\n}\nconst setAuthRedirectPath = (state,action)=>{\n    return updateObject(state,{authRedirectPath:action.path})\n}\nconst reducer = (state=initState,action)=>{\nswitch (action.type){\n    case actionTypes.AUTH_START:return authStart(state,action)\n    \n    case actionTypes.AUTH_SUCCESS :return authSuccess(state,action)\n    case actionTypes.AUTH_FAIL : return authFail(state,action)\n    case actionTypes.AUTH_LOGOUT:return authLogout(state,action)\n    case actionTypes.SET_AUTH_REDIRECT_PATH : return setAuthRedirectPath(state,action)\n    default :\n        return state;\n}\n\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {createStore,applyMiddleware,compose,combineReducers} from \"redux\";\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilder\";\nimport thunk from \"redux-thunk\";\nimport orderReducer from \"./store/reducers/order\";\nimport authReducer from \"./store/reducers/auth\"\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n    burgerBuilder: burgerBuilderReducer,\n    order:orderReducer,\n    auth:authReducer\n})\n\nconst store =createStore(rootReducer,composeEnhancers(\n    applyMiddleware(thunk)\n))\nconst app=(\n    <Provider store={store}>\n       <BrowserRouter>\n              <App/>\n       </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n\nserviceWorker.register();\n"],"sourceRoot":""}